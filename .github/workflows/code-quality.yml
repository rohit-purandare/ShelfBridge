# Code Quality
# Static analysis, linting, and configuration validation
name: Code Quality

on:
  pull_request:
    branches: [main]

concurrency:
  group: code-quality-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Shallow clone for CI performance

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Security audit
        run: npm audit --audit-level=high

      - name: Validate configuration
        run: |
          if [ -f "config/config.yaml.example" ]; then
            node -e "
              const yaml = require('js-yaml');
              const fs = require('fs');
              yaml.load(fs.readFileSync('config/config.yaml.example', 'utf8'));
              console.log('‚úÖ Configuration example is valid');
            "
          else
            echo "‚ùå config/config.yaml.example not found"
            exit 1
          fi

      - name: Check for issues
        run: |
          echo "üîç Checking for common issues..."

          # Debug statements
          if grep -r "console\.debug\|console\.trace\|debugger" src/ > /dev/null 2>&1; then
            echo "‚ö†Ô∏è Debug statements found - consider removing before production"
            grep -r "console\.debug\|console\.trace\|debugger" src/ || true
          fi

          # Hardcoded secrets - look for actual API tokens, not just variable names
          if grep -r -E "(password|secret|token|key)\s*[:=]\s*['\"][a-zA-Z0-9]{32,}['\"]" src/ --include="*.js" > /dev/null 2>&1; then
            echo "‚ö†Ô∏è Potential hardcoded secrets found:"
            grep -r -E "(password|secret|token|key)\s*[:=]\s*['\"][a-zA-Z0-9]{32,}['\"]" src/ --include="*.js" || true
            exit 1
          fi

          echo "‚úÖ Code quality checks passed"
