# Release Please Workflow
# Purpose: Automated versioning and release management using Release Please
# Triggers: Push to main branch
# Actions: Creates release PRs, publishes releases, triggers Docker builds for releases
name: Release Please

on:
  push:
    branches: [main]
    # Run on all pushes to main - Release Please handles loop prevention internally

jobs:
  release-please:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
      issues: write
      repository-projects: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}

    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ github.token }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Debug Release Please outputs
        if: always()
        run: |
          echo "Release created: ${{ steps.release.outputs.release_created }}"
          echo "Tag name: ${{ steps.release.outputs.tag_name }}"
          echo "Version: ${{ steps.release.outputs.version }}"
          echo "Upload URL: ${{ steps.release.outputs.upload_url }}"
          echo "HTML URL: ${{ steps.release.outputs.html_url }}"

  # Only run build and publish when a release is created
  build-and-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    uses: ./.github/workflows/docker-build.yml
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    secrets: inherit
    with:
      ref: ${{ needs.release-please.outputs.tag_name }}
      is_release: true

  # Success notification after build completes
  notify-success:
    runs-on: ubuntu-latest
    needs: [release-please, build-and-publish]
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    steps:
      - name: Release success message
        run: |
          echo "‚úÖ Release ${{ needs.release-please.outputs.tag_name }} created successfully"
          echo "üè∑Ô∏è Git tag ${{ needs.release-please.outputs.tag_name }} pushed"
          echo "üê≥ Docker images built and published with versioned tags"
          echo "üì¶ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }}"
          echo "üöÄ Multi-arch Docker images are now available:"
          echo ""
          echo "üè∑Ô∏è Published Docker image tags:"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:v${{ needs.release-please.outputs.version }} (full version with v)"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.version }} (version only)"
          MAJOR_MINOR=$(echo "${{ needs.release-please.outputs.version }}" | cut -d. -f1-2)
          MAJOR=$(echo "${{ needs.release-please.outputs.version }}" | cut -d. -f1)
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:v${MAJOR_MINOR} (major.minor with v)"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:${MAJOR_MINOR} (major.minor)"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:v${MAJOR} (major with v)"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:${MAJOR} (major only)"
          echo "  ‚Ä¢ ghcr.io/${{ github.repository }}:latest"
          echo ""
          echo "üìã Pull commands:"
          echo "  # Latest release:"
          echo "  docker pull ghcr.io/${{ github.repository }}:latest"
          echo "  # Specific version:"
          echo "  docker pull ghcr.io/${{ github.repository }}:v${{ needs.release-please.outputs.version }}"
