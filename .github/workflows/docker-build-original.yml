name: Docker Build

on:
  push:
    branches:
      [
        main,
        'feature/*',
        'feat/*',
        'bugfix/*',
        'fix/*',
        'hotfix/*',
        'release/*',
      ]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_call:
    outputs:
      image-digest:
        description: 'Docker image digest'
        value: ${{ jobs.build.outputs.image-digest }}
      image-tags:
        description: 'Docker image tags'
        value: ${{ jobs.build.outputs.image-tags }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    # Skip Docker builds for non-functional commits (docs, chore, test, ci, style)
    # Skip version bump commits to avoid duplicate builds (tag push will build)
    # But ALWAYS build for tag pushes (releases) regardless of commit message
    if: ${{ github.event_name != 'push' ||
      startsWith(github.ref, 'refs/tags/') ||
      (!startsWith(github.event.head_commit.message, 'docs:') &&
      !startsWith(github.event.head_commit.message, 'chore:') &&
      !startsWith(github.event.head_commit.message, 'test:') &&
      !startsWith(github.event.head_commit.message, 'ci:') &&
      !startsWith(github.event.head_commit.message, 'style:') &&
      !contains(github.event.head_commit.message, 'bump version to v')) }}

    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-tags: ${{ steps.meta.outputs.tags }}
      image-labels: ${{ steps.meta.outputs.labels }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo_name
        run: |
          echo "lowercase=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=build
            type=gha,scope=build-${{ github.ref_name }}
          cache-to: |
            type=gha,mode=max,scope=build
            type=gha,mode=max,scope=build-${{ github.ref_name }}
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Basic image validation
        run: |
          echo "🔍 Running basic Docker image validation..."

          # Get the first tag (usually the PR or branch tag)
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Validating image: $TAG"

          # Basic image structure validation
          if docker run --rm --entrypoint="" $TAG node --version; then
            echo "✅ Node.js runtime available"
          else
            echo "❌ CRITICAL FAILURE: Node.js runtime not available"
            exit 1
          fi

          # Verify main entry point exists
          if docker run --rm --entrypoint="" $TAG ls src/main.js >/dev/null 2>&1; then
            echo "✅ Main entry point exists"
          else
            echo "❌ CRITICAL FAILURE: Main entry point missing"
            exit 1
          fi

          echo "✅ Basic image validation passed"

      - name: Export image for testing
        if: github.event_name != 'pull_request'
        run: |
          # Get the first tag for export
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Exporting image: $TAG"

          # Save image as tar for use in subsequent workflows
          docker save $TAG > /tmp/docker-image.tar

      - name: Upload image artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/docker-image.tar
          retention-days: 1
